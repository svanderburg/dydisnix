{ servicesFile, infrastructureFile, distributionFile, serviceName, targetName
, nixpkgs ? <nixpkgs>
, disnix ? builtins.storePath @DISNIX_PREFIX@
}:

let
  inherit (builtins) getAttr;

  servicesFun = import servicesFile;
  infrastructure = import infrastructureFile;
  distributionFun = import distributionFile;
  
  lib = import "${disnix}/share/disnix/lib.nix" { inherit nixpkgs pkgs; };
  pkgs = lib.selectPkgs system;
  
  distribution = distributionFun { inherit infrastructure; };
  invDistribution = lib.generateInverseDistribution services infrastructure distribution;
  
  services = servicesFun { inherit distribution invDistribution system pkgs; };
  
  servicesWithTargets = lib.augmentTargetsInDependsOn distribution services;
  target = getAttr targetName infrastructure;
  system = if target ? system then target.system else builtins.currentSystem;
  
  service = getAttr serviceName servicesWithTargets;
in
if service ? dependsOn && service.dependsOn != {} then service.pkg (service.dependsOn) else service.pkg
