#!/bin/bash -e

# Shows the usage of this command to the user

showUsage()
{
    cat <<EOF
Usage: $0 -i infrastructure_nix --augment augment_nix [OPTION]

The command \`dydisnix-augment-infra' can be used to add extra properties to
an existing infrastructure model (such as privacy sensitive attributes) that is
typically generated by a discovery service.

Options:
  -i, --infrastructure=infrastructure_nix
                               Infrastructure Nix expression which captures
                               properties of machines in the network
  -a, --augment=augment_nix    Nix expression which augments additional
                               properties into the infrastructure model
  -h, --help                   Shows the usage of this command
EOF
}

# Autoconf settings

export prefix=@prefix@

# Import checks

source @DISNIX_PREFIX@/share/disnix/checks

# Parse valid argument options

PARAMS=`@getopt@ -n $0 -o i:a:h -l infrastructure:,augment:,help -- "$@"`

if [ $? != 0 ]
then
    showUsage
    exit 1
fi

eval set -- "$PARAMS"

# Evaluate valid options

while [ "$1" != "--" ]
do
    case "$1" in
	-i|--infrastructure)
	    infrastructureFile=`readlink -f $2`
	    ;;
	-a|--augment)
	    augmentFile=`readlink -f $2`
	    ;;
	-h|--help)
	    showUsage
	    exit 0
	    ;;
    esac
    
    shift
done

# Validate the given options

checkInfrastructureFile

if [ "$augmentFile" = "" ]
then
    echo "ERROR: An augment file must be specified!" >&2
    exit 1
fi

checkTmpDir

# Execute operation

augmentedInfrastructureFile=`mktemp -p $TMPDIR`

cat > $augmentedInfrastructureFile <<EOF
import @datadir@/@PACKAGE@/augment-infra.nix {
  infrastructure = import $infrastructureFile;
  augmentFun = import $augmentFile;
}
EOF

echo $augmentedInfrastructureFile
