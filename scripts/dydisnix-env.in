#!/bin/bash -e

# Shows the usage of this command to the user

showUsage()
{
    echo "Usage: $0 -s services_expr -q qos_expr [-i infrastructure_expr] [options]"
    echo "Options:"
    echo
    echo "-s,--services       Services Nix expression which describes all components of the distributed system"
    echo "-q,--qos            Quality of service Nix expression which describes how to devide services onto targets based on quality of service attributes"
    echo "-i,--infrastructure Infrastructure Nix expression which captures properties of machines in the network"
    echo "--augument          Nix epxression which auguments additional attributes into the infrastructure model"
    echo "--infragen          Path to the infrastructure generator"
    echo "-h,--help           Shows the usage of this command"
}

# Import checks

source @DISNIX_PREFIX@/share/disnix/checks

# Parse valid argument options

PARAMS=`getopt -n $0 -o s:i:q:h -l services:,infrastructure:,qos:,augument:,infragen:,help -- "$@"`

if [ $? != 0 ]
then
    showUsage
    exit 1
fi

eval set -- "$PARAMS"

# Evaluate valid options

while [ "$1" != "--" ]
do
    case "$1" in
        -s|--services)	    
	    servicesFile=`readlink -f $2`
	    ;;
	-q|--qos)
	    qosFile=`readlink -f $2`
	    ;;
	-i|--infrastructure)
	    infrastructureFile=`readlink -f $2`
	    ;;
	--augument)
	    augumentFile=`readlink -f $2`
	    ;;
	--infragen)
	    infragen=$2
	    ;;
	-h|--help)
	    showUsage
	    exit 0
	    ;;
    esac
    
    shift
done

# Validate the given options

checkServicesFile

if [ "$qosFile" = "" ]
then
    echo "ERROR: A quality of service model must be specified!" >&2
    exit 1
fi

if [ "$infragen" = "" ]
then
    if [ "$DYDISNIX_GENINFRA" = "" ] && [ "$infrastructureFile" = "" ]
    then
	echo "ERROR: Either an infrastructure generator or an infrastructure expression must be specified!" >&2
	exit 1
    else
	infragen=$DYDISNIX_GENINFRA
    fi
fi

checkTmpDir

# Execute operation

if [ "$infrastructureFile" = "" ]
then
    $infragen > $TMPDIR/infrastructure.nix
    infrastructureFile=$TMPDIR/infrastructure.nix
fi

if [ "$augumentFile" != "" ]
then
    infrastructureFile=`dydisnix-augument-infra --infrastructure $infrastructureFile --augument $augumentFile`
fi

distribution=`dydisnix-gendist --services $servicesFile --infrastructure $infrastructureFile --qos $qosFile`
disnix-env --services $servicesFile --infrastructure $infrastructureFile --distribution $distribution
