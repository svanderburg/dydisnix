#!/bin/bash -e

# Shows the usage of this command to the user

showUsage()
{
    echo "Usage: $0 -s services_expr -q qos_expr [-i infrastructure_expr] [options]"
    echo "Options:"
    echo
    echo "-s,--services               Services Nix expression which describes all components of the distributed system"
    echo "-q,--qos                    Quality of service Nix expression which describes how to devide services onto targets based on quality of service attributes"
    echo "-i,--infrastructure         Infrastructure Nix expression which captures properties of machines in the network"
    echo "-a,--augment                Nix epxression which augments additional attributes into the infrastructure model"
    echo "-p,--profile                Name of the profile that is used for this system. Defaults to: default"
    echo "--coordinator-profile-path  Path where to store the coordinator profile generations"
    echo "--geninfra                  Path to the infrastructure generator"
    echo "-h,--help                   Shows the usage of this command"
}

# Import checks

source @DISNIX_PREFIX@/share/disnix/checks

# Parse valid argument options

PARAMS=`@getopt@ -n $0 -o s:i:q:a:p:h -l services:,infrastructure:,qos:,augment:,profile:,coordinator-profile-path:,geninfra:,help -- "$@"`

if [ $? != 0 ]
then
    showUsage
    exit 1
fi

eval set -- "$PARAMS"

# Evaluate valid options

while [ "$1" != "--" ]
do
    case "$1" in
        -s|--services)	    
	    servicesFile=`readlink -f $2`
	    ;;
	-q|--qos)
	    qosFile=`readlink -f $2`
	    ;;
	-i|--infrastructure)
	    infrastructureFile=`readlink -f $2`
	    ;;
	-a|--augment)
	    augmentFile=`readlink -f $2`
	    ;;
	-p|--profile)
	    profileArg="--profile $2"
	    ;;
	--coordinator-profile-path)
	    coordinatorProfilePathArg="--coordinator-profile-path $2"
	    ;;
	--geninfra)
	    geninfra=$2
	    ;;
	-h|--help)
	    showUsage
	    exit 0
	    ;;
    esac
    
    shift
done

# Validate the given options

checkServicesFile

if [ "$qosFile" = "" ]
then
    echo "ERROR: A quality of service model must be specified!" >&2
    exit 1
fi

if [ "$geninfra" = "" ]
then
    if [ "$DYDISNIX_GENINFRA" = "" ] && [ "$infrastructureFile" = "" ]
    then
	echo "ERROR: Either an infrastructure generator or an infrastructure expression must be specified!" >&2
	exit 1
    else
	geninfra=$DYDISNIX_GENINFRA
    fi
fi

checkTmpDir

# Execute operation

if [ "$infrastructureFile" = "" ]
then
    $geninfra > $TMPDIR/infrastructure.nix
    infrastructureFile=$TMPDIR/infrastructure.nix
fi

if [ "$augmentFile" != "" ]
then
    infrastructureFile=`dydisnix-augment-infra --infrastructure $infrastructureFile --augment $augmentFile $profileArg $coordinatorProfilePathArg`
fi

distribution=`dydisnix-gendist --services $servicesFile --infrastructure $infrastructureFile --qos $qosFile $profileArg $coordinatorProfilePathArg`
disnix-env --services $servicesFile --infrastructure $infrastructureFile --distribution $distribution $profileArg $coordinatorProfilePathArg
